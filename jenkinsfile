pipeline {
    agent any

    tools {
        // Define the tool outside the stages
        maven 'Default Maven'
    }

    stages {
        stage('git pull') {
            steps {
                git branch: 'main', credentialsId: 'jenkins-github', url: 'https://github.com/Raghav3195/SpringGreetings.git'
            }
        }
        stage('SonarQube Analysis'){
            steps {
                script {
                    withSonarQubeEnv('YourSonarQubeEnvironment') {
                        sh "mvn clean verify sonar:sonar -Dsonar.projectKey=greeting -Dsonar.projectName='greeting'"
                    }
                }
            }
        }
        stage('stop process') {
            steps {
                sh 'ssh jenkins@172.20.2.9 "sudo systemctl stop greeting.service"'
            }
        }
        stage('copy') {
            steps {
                sh 'cd $WORKSPACE && mvn clean package'
                sh 'rsync -avz "$WORKSPACE/target/" jenkins@172.20.2.9:/greeting/target/'
            }
        }    
        stage('Build') {
            steps {
                sh 'ssh jenkins@172.20.2.9 "sudo systemctl daemon-reload && sudo systemctl restart greeting.service"'
                sh 'sleep 60'
            }
        }
        stage('Test') {
            steps {
                sh 'curl http://18.204.14.173/greeting/hello'
            }
        }
    }
}
